# import UserOrderByInput, PostOrderByInput, CommentOrderByInput,  from './generated/prisma.graphql'

type Query {
  me: User!
  myPosts(query: String, orderBy: PostOrderByInput): [Post]!
  users(
    query: String
    first: Int
    skip: Int
    orderBy: UserOrderByInput # it is enum that imported from generated prisma.graphql due to not typing all the options
  ): [User]! #first and second will be pagination
  posts(
    query: String
    first: Int
    skip: Int
    orderBy: PostOrderByInput
  ): [Post]!
  comments(query: String, orderBy: CommentOrderByInput): [Comment]!
  post(id: ID!): Post!
}

type Mutation {
  login(data: LoginUserInput!): AuthPayload!
  createUser(data: CreateUserInput): AuthPayload!
  deleteUser: User! # deleted (id: ID!) arg after using jwt
  updateUser(data: UpdateUserInput!): User! # deleted id: ID! after using jwt
  createPost(post: CreatePostInput): Post!
  deletePost(id: ID!): Post!
  updatePost(id: ID!, data: UpdatePostInput!): Post!
  createComment(comment: CreateCommentInput): Comment!
  deleteComment(id: ID!): Comment!
  updateComment(id: ID!, data: updateCommentInput!): Comment!
}

type Subscription {
  count: Int!
  comment(postId: ID!): CommentSubscriptionPayload!
  post: PostSubscriptionPayload!
  myPost: PostSubscriptionPayload!
}

type AuthPayload {
  token: String!
  user: User!
}

input LoginUserInput {
  email: String!
  password: String!
}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
  age: Int
}

input UpdateUserInput {
  name: String
  email: String
  password: String
  age: Int
}

input CreatePostInput {
  title: String!
  body: String!
  published: Boolean
  # removed author_id: ID! after using authenticated userId
}

input UpdatePostInput {
  title: String
  body: String
  published: Boolean
}

input CreateCommentInput {
  text: String!
  #  author_id: ID!
  post_id: ID!
}

input updateCommentInput {
  text: String
}

type User {
  id: ID!
  name: String!
  email: String
  password: String! # added password, but prisma delete and add line 6 in .graphqlconfig due to update generated dir
  posts: [Post]
  comments: [Comment]!
  updatedAt: String!
  createdAt: String!
}

type Post {
  id: ID!
  title: String!
  body: String!
  published: Boolean!
  author_id: User!
  comments: [Comment]!
  updatedAt: String!
  createdAt: String!
}

type Comment {
  id: ID!
  text: String!
  author_id: User!
  post_id: Post!
  updatedAt: String!
  createdAt: String!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}
type PostSubscriptionPayload {
  mutation: MutationType!
  node: Post # changes made as well
}

type CommentSubscriptionPayload {
  mutation: MutationType!
  node: Comment # later on changed data -> node, prisma sends subscribed data called as node
}
